{"version":3,"names":[],"mappings":"","sources":["modules/window.js"],"sourcesContent":["import { throttle } from './throttle.js';\r\nimport { events, isTouchDevice, deviceType } from './checkDeviceType.js';\r\n\r\nisTouchDevice();\r\n\r\nconst template = document.querySelector('.template');\r\nconst desktop = document.querySelector('.desktop');\r\nconst desktopFooter = desktop.querySelector('.desktop__footer');\r\nconst windowTemplate = template.querySelector('.window');\r\nconst fileList = document.querySelectorAll('.file');\r\nconst referenceTemplate = template.querySelector('.reference');\r\nlet initialzIndex = 0;\r\nlet initialX = 0;\r\nlet initialY = 0;\r\nlet lastFile;\r\n\r\ndesktopFooter.addEventListener('wheel', (evt) => {\r\n  evt.preventDefault();\r\n  desktopFooter.scrollLeft += evt.deltaY;\r\n});\r\n\r\nconst setStartPosition = (elem) => {\r\n  elem.classList.remove('window--collapsed');\r\n  elem.style.left = `${desktop.offsetWidth / 2 /* + initialWindowCounterHorisontal*/}px`;\r\n  elem.style.top = `${desktop.offsetHeight / 2 /* +  initialWindowCounterVertical*/}px`;\r\n  elem.style.transform = 'translate(-50%, -50%)';\r\n};\r\n\r\nconst setCurrentWindowActive = (win) => {\r\n  const newzIndex = initialzIndex + 1;\r\n  win.style.zIndex = `${newzIndex}`;\r\n  initialzIndex = newzIndex;\r\n  const allWindows = desktop.querySelectorAll('.window');\r\n  allWindows.forEach((c) => {\r\n    c.classList.remove('window--active');\r\n  });\r\n  win.classList.add('window--active');\r\n};\r\n\r\nconst setCurrentReferenceActive = (ref) => {\r\n  lastFile = ref;\r\n  const allReferences = desktop.querySelectorAll('.reference');\r\n  allReferences.forEach((b) => {\r\n    b.classList.remove('reference--active');\r\n  });\r\n  ref.classList.add('reference--active');\r\n};\r\n\r\nfileList.forEach((item) => {\r\n  function onFileOpen(evt) {\r\n    evt.target.removeEventListener(events[deviceType].click, onFileOpen);\r\n    const fileName = evt.target.querySelector('.file__name');\r\n    const pathIcon = evt.target.querySelector('.file__icon').cloneNode(true);\r\n    const newWindow = windowTemplate.cloneNode(true);\r\n    const newWindowPath = newWindow.querySelector('.window__path');\r\n    const windowDraggableArea = newWindow.querySelector('.window__draggable-area');\r\n    const reference = referenceTemplate.cloneNode(true);\r\n    newWindowPath.textContent = `C:/${fileName.textContent}`;\r\n    windowDraggableArea.insertBefore(pathIcon, newWindowPath);\r\n    desktop.appendChild(newWindow);\r\n    setStartPosition(newWindow);\r\n    setCurrentWindowActive(newWindow);\r\n    setCurrentReferenceActive(reference);\r\n\r\n    const onMoveEvent = (e) => {\r\n      const newX = !isTouchDevice() ? e.clientX : e.touches[0].clientX;\r\n      const newY = !isTouchDevice() ? e.clientY : e.touches[0].clientY;\r\n      newWindow.style.left = `${newWindow.offsetLeft - (initialX - newX)}px`;\r\n      newWindow.style.top = `${newWindow.offsetTop - (initialY - newY)}px`;\r\n      initialX = newX;\r\n      initialY = newY;\r\n    };\r\n\r\n    const onMoveStop = () => {\r\n      document.removeEventListener(events[deviceType].move, onMoveEvent);\r\n    };\r\n\r\n    const onWindowDrag = (e) => {\r\n      if (e.cancelable) {\r\n        e.preventDefault();\r\n      }\r\n      if (!newWindow.classList.contains('window--fullscreen')) {\r\n        initialX = !isTouchDevice() ? e.clientX : evt.touches[0].clientX;\r\n        initialY = !isTouchDevice() ? e.clientY : evt.touches[0].clientY;\r\n        document.addEventListener(events[deviceType].move, onMoveEvent);\r\n        document.addEventListener(events[deviceType].up, onMoveStop);\r\n      }\r\n    };\r\n\r\n    windowDraggableArea.addEventListener(events[deviceType].down, onWindowDrag);\r\n    newWindow.addEventListener(events[deviceType].down, () => {\r\n      setCurrentWindowActive(newWindow);\r\n      setCurrentReferenceActive(reference);\r\n    });\r\n\r\n    const onCollapseButton = () => {\r\n      if (lastFile === reference) {\r\n        if (newWindow.classList.contains('window--collapsed')) {\r\n          newWindow.classList.remove('window--collapsed');\r\n        } else {\r\n          newWindow.classList.add('window--collapsed');\r\n        }\r\n      } else {\r\n        setCurrentWindowActive(newWindow);\r\n        setCurrentReferenceActive(reference);\r\n      }\r\n      setCurrentWindowActive(newWindow);\r\n    };\r\n\r\n    const windowButtonCollapse = newWindow.querySelector('.window__button--collapse');\r\n    windowButtonCollapse.addEventListener(events[deviceType].click, onCollapseButton);\r\n\r\n    const onCloseButton = () => {\r\n      newWindow.remove();\r\n      item.addEventListener(events[deviceType].click, onFileOpen);\r\n      reference.remove();\r\n    };\r\n\r\n    const windowButtonClose = newWindow.querySelector('.window__button--close');\r\n    windowButtonClose.addEventListener(events[deviceType].click, onCloseButton);\r\n\r\n    // windowButtonExpand.addEventListener(events[deviceType].click, onExpandButton);\r\n\r\n    /* apply content to the new window */\r\n    const clonedTargetContent = evt.target.querySelector('.file__content').cloneNode(true);\r\n    newWindow.appendChild(clonedTargetContent);\r\n    clonedTargetContent.classList.remove('visually-hidden');\r\n    clonedTargetContent.classList.add('window__content');\r\n    clonedTargetContent.classList.remove('file__content');\r\n    if (evt.target.classList.contains('file--folder')) {\r\n      const innerFiles = newWindow.querySelectorAll('.file');\r\n      clonedTargetContent.classList.add('window__content--folder');\r\n      innerFiles.forEach((file) => {\r\n        file.addEventListener(events[deviceType].click, onFileOpen);\r\n      });\r\n    }\r\n    /* create reference */\r\n    const referenceText = reference.querySelector('.reference__text');\r\n    referenceText.textContent = fileName.textContent;\r\n    const referenceIcon = evt.target.querySelector('.file__icon').cloneNode(true);\r\n    reference.insertBefore(referenceIcon, referenceText);\r\n    desktopFooter.appendChild(reference);\r\n    reference.addEventListener(events[deviceType].click, onCollapseButton);\r\n  }\r\n\r\n  if (item.classList.contains('file--text') || item.classList.contains('file--folder')) {\r\n    item.addEventListener(events[deviceType].click, onFileOpen);\r\n  }\r\n});\r\n"],"file":"window.js"}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,