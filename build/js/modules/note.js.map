{"version":3,"names":[],"mappings":"","sources":["modules/note.js"],"sourcesContent":["let deviceType = '';\r\n\r\nconst isTouchDevice = () => {\r\n  try {\r\n    document.createEvent('TouchEvent');\r\n    deviceType = 'touch';\r\n    return true;\r\n  } catch (err) {\r\n    deviceType = 'mouse';\r\n    return false;\r\n  }\r\n};\r\n\r\nisTouchDevice();\r\n\r\nconst events = {\r\n  mouse: {\r\n    down: 'mousedown',\r\n    move: 'mousemove',\r\n    up: 'mouseup',\r\n    click: 'click',\r\n  },\r\n  touch: {\r\n    down: 'touchstart',\r\n    move: 'touchmove',\r\n    up: 'touchend',\r\n    click: 'click',\r\n  },\r\n};\r\n\r\nlet initialX = 0;\r\nlet initialY = 0;\r\nlet initialzIndex = 0;\r\nlet moveElement = false;\r\n\r\nconst file = document.querySelector('.file');\r\nconst desktopFooter = document.querySelector('.desktop__footer');\r\nconst referenceTemplate = document.querySelector('.reference');\r\n\r\nfor(let i = 0; i < 1000; i++) {\r\n  const fileClone = file.cloneNode(true);\r\n  document.querySelector('.desktop__wrapper').appendChild(fileClone);\r\n}\r\n\r\nconst fileList = document.querySelectorAll('.file');\r\nfileList.forEach((item) => {\r\n  const window = item.querySelector('.window');\r\n  const buttonCollapse = item.querySelector('.window__button--collapse');\r\n  const buttonExpand = item.querySelector('.window__button--expand');\r\n  const buttonClose = item.querySelector('.window__button--close');\r\n  const noteDraggableArea = item.querySelector('.window__draggable-area');\r\n  const fileLabel = item.querySelector('.file__label');\r\n  const reference = referenceTemplate.cloneNode(true);\r\n\r\n  const setActive = () => {\r\n    const referenceList = document.querySelectorAll('.reference');\r\n    referenceList.forEach((refernce) => {\r\n      refernce.classList.remove('reference--active');\r\n    });\r\n    reference.classList.add('reference--active');\r\n    const newzIndex = initialzIndex + 1;\r\n    window.style.zIndex = `${newzIndex}`;\r\n    initialzIndex = newzIndex;\r\n  };\r\n\r\n  const onCollapse = () =>{\r\n    window.classList.toggle('window--collapsed');\r\n    console.log('onCollapse');\r\n    setActive();\r\n  };\r\n\r\n  const onFileOpen = () => {\r\n    stopMovement();\r\n    window.classList.remove('window--collapsed');\r\n    fileLabel.classList.add('file__label--active');\r\n    window.style.left = '50%';\r\n    window.style.top = '50%';\r\n    window.style.transform = 'translate(-50%, -50%)';\r\n    reference.querySelector('.reference__text').textContent =\r\n      item.querySelector('.file__name').textContent;\r\n    reference.addEventListener('click', onCollapse);\r\n    reference.classList.add('reference--active');\r\n    desktopFooter.appendChild(reference);\r\n    fileLabel.removeEventListener(events[deviceType].click, onFileOpen);\r\n    console.log('onFileOpen');\r\n    setActive();\r\n  };\r\n\r\n  const onCloseButton = () => {\r\n    window.classList.add('window--collapsed');\r\n    fileLabel.classList.remove('file__label--active');\r\n    reference.remove();\r\n    fileLabel.addEventListener(events[deviceType].click, onFileOpen);\r\n    console.log('onCloseButton');\r\n  };\r\n\r\n  const onExpandButton = () => {\r\n    window.classList.remove('window--collapsed');\r\n    window.classList.toggle('window--fullscreen');\r\n    console.log('onExpandButton');\r\n  };\r\n\r\n  const onWindowClick = () => {\r\n    setActive();\r\n    console.log('onWindowClick');\r\n  };\r\n\r\n  const onMoveEvent = (evt) => {\r\n    console.log('onMoveEvent');\r\n    if (moveElement) {\r\n      const newX = !isTouchDevice() ? evt.clientX : evt.touches[0].clientX;\r\n      const newY = !isTouchDevice() ? evt.clientY : evt.touches[0].clientY;\r\n      window.style.left = `${window.offsetLeft - (initialX - newX)}px`;\r\n      window.style.top = `${window.offsetTop - (initialY - newY)}px`;\r\n      initialX = newX;\r\n      initialY = newY;\r\n      console.log('onMoveEvent = true');\r\n    }\r\n  };\r\n\r\n  const onWindowDrag = (evt) => {\r\n    console.log('onWindowDrag');\r\n    if (evt.cancelable) {\r\n      evt.preventDefault();\r\n    }\r\n    if (!window.classList.contains('window--fullscreen')) {\r\n      moveElement = true;\r\n      initialX = !isTouchDevice() ? evt.clientX : evt.touches[0].clientX;\r\n      initialY = !isTouchDevice() ? evt.clientY : evt.touches[0].clientY;\r\n      document.addEventListener(events[deviceType].move, onMoveEvent);\r\n      document.addEventListener(events[deviceType].up, stopMovement);\r\n      console.log('onWindowDrag = true');\r\n    }\r\n  };\r\n\r\n  fileLabel.addEventListener(events[deviceType].click, onFileOpen);\r\n\r\n  buttonCollapse.addEventListener(events[deviceType].click, onCollapse);\r\n\r\n  buttonClose.addEventListener(events[deviceType].click, onCloseButton);\r\n\r\n  buttonExpand.addEventListener(events[deviceType].click, onExpandButton);\r\n\r\n  window.addEventListener(events[deviceType].down, onWindowClick);\r\n\r\n  noteDraggableArea.addEventListener(events[deviceType].down, onWindowDrag);\r\n\r\n  function stopMovement() {\r\n    moveElement = false;\r\n    document.removeEventListener(events[deviceType].move, onMoveEvent);\r\n    document.removeEventListener(events[deviceType].up, stopMovement);\r\n    console.log('stopMovement');\r\n  }\r\n});\r\n\r\ndesktopFooter.addEventListener('wheel', (evt) => {\r\n  evt.preventDefault();\r\n  desktopFooter.scrollLeft += evt.deltaY;\r\n  console.log('wheel');\r\n});\r\n"],"file":"note.js"}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJtb2R1bGVzL25vdGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGRldmljZVR5cGUgPSAnJztcclxuXHJcbmNvbnN0IGlzVG91Y2hEZXZpY2UgPSAoKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdUb3VjaEV2ZW50Jyk7XHJcbiAgICBkZXZpY2VUeXBlID0gJ3RvdWNoJztcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgZGV2aWNlVHlwZSA9ICdtb3VzZSc7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59O1xyXG5cclxuaXNUb3VjaERldmljZSgpO1xyXG5cclxuY29uc3QgZXZlbnRzID0ge1xyXG4gIG1vdXNlOiB7XHJcbiAgICBkb3duOiAnbW91c2Vkb3duJyxcclxuICAgIG1vdmU6ICdtb3VzZW1vdmUnLFxyXG4gICAgdXA6ICdtb3VzZXVwJyxcclxuICAgIGNsaWNrOiAnY2xpY2snLFxyXG4gIH0sXHJcbiAgdG91Y2g6IHtcclxuICAgIGRvd246ICd0b3VjaHN0YXJ0JyxcclxuICAgIG1vdmU6ICd0b3VjaG1vdmUnLFxyXG4gICAgdXA6ICd0b3VjaGVuZCcsXHJcbiAgICBjbGljazogJ2NsaWNrJyxcclxuICB9LFxyXG59O1xyXG5cclxubGV0IGluaXRpYWxYID0gMDtcclxubGV0IGluaXRpYWxZID0gMDtcclxubGV0IGluaXRpYWx6SW5kZXggPSAwO1xyXG5sZXQgbW92ZUVsZW1lbnQgPSBmYWxzZTtcclxuXHJcbmNvbnN0IGZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmlsZScpO1xyXG5jb25zdCBkZXNrdG9wRm9vdGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRlc2t0b3BfX2Zvb3RlcicpO1xyXG5jb25zdCByZWZlcmVuY2VUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZWZlcmVuY2UnKTtcclxuXHJcbmZvcihsZXQgaSA9IDA7IGkgPCAxMDAwOyBpKyspIHtcclxuICBjb25zdCBmaWxlQ2xvbmUgPSBmaWxlLmNsb25lTm9kZSh0cnVlKTtcclxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGVza3RvcF9fd3JhcHBlcicpLmFwcGVuZENoaWxkKGZpbGVDbG9uZSk7XHJcbn1cclxuXHJcbmNvbnN0IGZpbGVMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmZpbGUnKTtcclxuZmlsZUxpc3QuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gIGNvbnN0IHdpbmRvdyA9IGl0ZW0ucXVlcnlTZWxlY3RvcignLndpbmRvdycpO1xyXG4gIGNvbnN0IGJ1dHRvbkNvbGxhcHNlID0gaXRlbS5xdWVyeVNlbGVjdG9yKCcud2luZG93X19idXR0b24tLWNvbGxhcHNlJyk7XHJcbiAgY29uc3QgYnV0dG9uRXhwYW5kID0gaXRlbS5xdWVyeVNlbGVjdG9yKCcud2luZG93X19idXR0b24tLWV4cGFuZCcpO1xyXG4gIGNvbnN0IGJ1dHRvbkNsb3NlID0gaXRlbS5xdWVyeVNlbGVjdG9yKCcud2luZG93X19idXR0b24tLWNsb3NlJyk7XHJcbiAgY29uc3Qgbm90ZURyYWdnYWJsZUFyZWEgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy53aW5kb3dfX2RyYWdnYWJsZS1hcmVhJyk7XHJcbiAgY29uc3QgZmlsZUxhYmVsID0gaXRlbS5xdWVyeVNlbGVjdG9yKCcuZmlsZV9fbGFiZWwnKTtcclxuICBjb25zdCByZWZlcmVuY2UgPSByZWZlcmVuY2VUZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSk7XHJcblxyXG4gIGNvbnN0IHNldEFjdGl2ZSA9ICgpID0+IHtcclxuICAgIGNvbnN0IHJlZmVyZW5jZUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucmVmZXJlbmNlJyk7XHJcbiAgICByZWZlcmVuY2VMaXN0LmZvckVhY2goKHJlZmVybmNlKSA9PiB7XHJcbiAgICAgIHJlZmVybmNlLmNsYXNzTGlzdC5yZW1vdmUoJ3JlZmVyZW5jZS0tYWN0aXZlJyk7XHJcbiAgICB9KTtcclxuICAgIHJlZmVyZW5jZS5jbGFzc0xpc3QuYWRkKCdyZWZlcmVuY2UtLWFjdGl2ZScpO1xyXG4gICAgY29uc3QgbmV3ekluZGV4ID0gaW5pdGlhbHpJbmRleCArIDE7XHJcbiAgICB3aW5kb3cuc3R5bGUuekluZGV4ID0gYCR7bmV3ekluZGV4fWA7XHJcbiAgICBpbml0aWFsekluZGV4ID0gbmV3ekluZGV4O1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IG9uQ29sbGFwc2UgPSAoKSA9PntcclxuICAgIHdpbmRvdy5jbGFzc0xpc3QudG9nZ2xlKCd3aW5kb3ctLWNvbGxhcHNlZCcpO1xyXG4gICAgY29uc29sZS5sb2coJ29uQ29sbGFwc2UnKTtcclxuICAgIHNldEFjdGl2ZSgpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IG9uRmlsZU9wZW4gPSAoKSA9PiB7XHJcbiAgICBzdG9wTW92ZW1lbnQoKTtcclxuICAgIHdpbmRvdy5jbGFzc0xpc3QucmVtb3ZlKCd3aW5kb3ctLWNvbGxhcHNlZCcpO1xyXG4gICAgZmlsZUxhYmVsLmNsYXNzTGlzdC5hZGQoJ2ZpbGVfX2xhYmVsLS1hY3RpdmUnKTtcclxuICAgIHdpbmRvdy5zdHlsZS5sZWZ0ID0gJzUwJSc7XHJcbiAgICB3aW5kb3cuc3R5bGUudG9wID0gJzUwJSc7XHJcbiAgICB3aW5kb3cuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZSgtNTAlLCAtNTAlKSc7XHJcbiAgICByZWZlcmVuY2UucXVlcnlTZWxlY3RvcignLnJlZmVyZW5jZV9fdGV4dCcpLnRleHRDb250ZW50ID1cclxuICAgICAgaXRlbS5xdWVyeVNlbGVjdG9yKCcuZmlsZV9fbmFtZScpLnRleHRDb250ZW50O1xyXG4gICAgcmVmZXJlbmNlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb25Db2xsYXBzZSk7XHJcbiAgICByZWZlcmVuY2UuY2xhc3NMaXN0LmFkZCgncmVmZXJlbmNlLS1hY3RpdmUnKTtcclxuICAgIGRlc2t0b3BGb290ZXIuYXBwZW5kQ2hpbGQocmVmZXJlbmNlKTtcclxuICAgIGZpbGVMYWJlbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50c1tkZXZpY2VUeXBlXS5jbGljaywgb25GaWxlT3Blbik7XHJcbiAgICBjb25zb2xlLmxvZygnb25GaWxlT3BlbicpO1xyXG4gICAgc2V0QWN0aXZlKCk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgb25DbG9zZUJ1dHRvbiA9ICgpID0+IHtcclxuICAgIHdpbmRvdy5jbGFzc0xpc3QuYWRkKCd3aW5kb3ctLWNvbGxhcHNlZCcpO1xyXG4gICAgZmlsZUxhYmVsLmNsYXNzTGlzdC5yZW1vdmUoJ2ZpbGVfX2xhYmVsLS1hY3RpdmUnKTtcclxuICAgIHJlZmVyZW5jZS5yZW1vdmUoKTtcclxuICAgIGZpbGVMYWJlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50c1tkZXZpY2VUeXBlXS5jbGljaywgb25GaWxlT3Blbik7XHJcbiAgICBjb25zb2xlLmxvZygnb25DbG9zZUJ1dHRvbicpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IG9uRXhwYW5kQnV0dG9uID0gKCkgPT4ge1xyXG4gICAgd2luZG93LmNsYXNzTGlzdC5yZW1vdmUoJ3dpbmRvdy0tY29sbGFwc2VkJyk7XHJcbiAgICB3aW5kb3cuY2xhc3NMaXN0LnRvZ2dsZSgnd2luZG93LS1mdWxsc2NyZWVuJyk7XHJcbiAgICBjb25zb2xlLmxvZygnb25FeHBhbmRCdXR0b24nKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBvbldpbmRvd0NsaWNrID0gKCkgPT4ge1xyXG4gICAgc2V0QWN0aXZlKCk7XHJcbiAgICBjb25zb2xlLmxvZygnb25XaW5kb3dDbGljaycpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IG9uTW92ZUV2ZW50ID0gKGV2dCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ29uTW92ZUV2ZW50Jyk7XHJcbiAgICBpZiAobW92ZUVsZW1lbnQpIHtcclxuICAgICAgY29uc3QgbmV3WCA9ICFpc1RvdWNoRGV2aWNlKCkgPyBldnQuY2xpZW50WCA6IGV2dC50b3VjaGVzWzBdLmNsaWVudFg7XHJcbiAgICAgIGNvbnN0IG5ld1kgPSAhaXNUb3VjaERldmljZSgpID8gZXZ0LmNsaWVudFkgOiBldnQudG91Y2hlc1swXS5jbGllbnRZO1xyXG4gICAgICB3aW5kb3cuc3R5bGUubGVmdCA9IGAke3dpbmRvdy5vZmZzZXRMZWZ0IC0gKGluaXRpYWxYIC0gbmV3WCl9cHhgO1xyXG4gICAgICB3aW5kb3cuc3R5bGUudG9wID0gYCR7d2luZG93Lm9mZnNldFRvcCAtIChpbml0aWFsWSAtIG5ld1kpfXB4YDtcclxuICAgICAgaW5pdGlhbFggPSBuZXdYO1xyXG4gICAgICBpbml0aWFsWSA9IG5ld1k7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdvbk1vdmVFdmVudCA9IHRydWUnKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjb25zdCBvbldpbmRvd0RyYWcgPSAoZXZ0KSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZygnb25XaW5kb3dEcmFnJyk7XHJcbiAgICBpZiAoZXZ0LmNhbmNlbGFibGUpIHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9XHJcbiAgICBpZiAoIXdpbmRvdy5jbGFzc0xpc3QuY29udGFpbnMoJ3dpbmRvdy0tZnVsbHNjcmVlbicpKSB7XHJcbiAgICAgIG1vdmVFbGVtZW50ID0gdHJ1ZTtcclxuICAgICAgaW5pdGlhbFggPSAhaXNUb3VjaERldmljZSgpID8gZXZ0LmNsaWVudFggOiBldnQudG91Y2hlc1swXS5jbGllbnRYO1xyXG4gICAgICBpbml0aWFsWSA9ICFpc1RvdWNoRGV2aWNlKCkgPyBldnQuY2xpZW50WSA6IGV2dC50b3VjaGVzWzBdLmNsaWVudFk7XHJcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRzW2RldmljZVR5cGVdLm1vdmUsIG9uTW92ZUV2ZW50KTtcclxuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudHNbZGV2aWNlVHlwZV0udXAsIHN0b3BNb3ZlbWVudCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdvbldpbmRvd0RyYWcgPSB0cnVlJyk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgZmlsZUxhYmVsLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRzW2RldmljZVR5cGVdLmNsaWNrLCBvbkZpbGVPcGVuKTtcclxuXHJcbiAgYnV0dG9uQ29sbGFwc2UuYWRkRXZlbnRMaXN0ZW5lcihldmVudHNbZGV2aWNlVHlwZV0uY2xpY2ssIG9uQ29sbGFwc2UpO1xyXG5cclxuICBidXR0b25DbG9zZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50c1tkZXZpY2VUeXBlXS5jbGljaywgb25DbG9zZUJ1dHRvbik7XHJcblxyXG4gIGJ1dHRvbkV4cGFuZC5hZGRFdmVudExpc3RlbmVyKGV2ZW50c1tkZXZpY2VUeXBlXS5jbGljaywgb25FeHBhbmRCdXR0b24pO1xyXG5cclxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihldmVudHNbZGV2aWNlVHlwZV0uZG93biwgb25XaW5kb3dDbGljayk7XHJcblxyXG4gIG5vdGVEcmFnZ2FibGVBcmVhLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRzW2RldmljZVR5cGVdLmRvd24sIG9uV2luZG93RHJhZyk7XHJcblxyXG4gIGZ1bmN0aW9uIHN0b3BNb3ZlbWVudCgpIHtcclxuICAgIG1vdmVFbGVtZW50ID0gZmFsc2U7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50c1tkZXZpY2VUeXBlXS5tb3ZlLCBvbk1vdmVFdmVudCk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50c1tkZXZpY2VUeXBlXS51cCwgc3RvcE1vdmVtZW50KTtcclxuICAgIGNvbnNvbGUubG9nKCdzdG9wTW92ZW1lbnQnKTtcclxuICB9XHJcbn0pO1xyXG5cclxuZGVza3RvcEZvb3Rlci5hZGRFdmVudExpc3RlbmVyKCd3aGVlbCcsIChldnQpID0+IHtcclxuICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICBkZXNrdG9wRm9vdGVyLnNjcm9sbExlZnQgKz0gZXZ0LmRlbHRhWTtcclxuICBjb25zb2xlLmxvZygnd2hlZWwnKTtcclxufSk7XHJcbiJdLCJmaWxlIjoibm90ZS5qcyJ9