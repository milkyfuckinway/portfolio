{"version":3,"names":[],"mappings":"","sources":["modules/window.js"],"sourcesContent":["import { throttle } from './throttle.js';\r\nimport { isTouchDevice, deviceType } from './checkDeviceType.js';\r\n\r\nisTouchDevice();\r\n\r\nconst events = {\r\n  mouse: {\r\n    down: 'mousedown',\r\n    move: 'mousemove',\r\n    up: 'mouseup',\r\n    click: 'click',\r\n  },\r\n  touch: {\r\n    down: 'touchstart',\r\n    move: 'touchmove',\r\n    up: 'touchend',\r\n    click: 'click',\r\n  },\r\n};\r\n\r\nconst template = document.querySelector('.template');\r\nconst desktop = document.querySelector('.desktop');\r\nconst desktopFooter = desktop.querySelector('.desktop__footer');\r\nconst windowTemplate = template.querySelector('.window');\r\nconst referenceTemplate = template.querySelector('.reference');\r\nconst desktopWidth = desktop.offsetWidth;\r\nconst desktopHeight = desktop.offsetHeight;\r\nconst halfDesktopWidth = desktopWidth / 2;\r\nconst halfDesktopHeight = desktopHeight / 2;\r\n\r\nconst coefficientWidth = () => {\r\n  if (desktopWidth < 500) {\r\n    return 0.9;\r\n  } else {\r\n    return 0.5;\r\n  }\r\n};\r\n\r\nconst coefficientHeight = () => {\r\n  if (desktopWidth < 500) {\r\n    return 0.7;\r\n  } else {\r\n    return 0.5;\r\n  }\r\n};\r\n\r\nconst windowWidth = Math.round(window.innerWidth * coefficientWidth());\r\nconst windowHeight = Math.round(window.innerHeight * coefficientHeight());\r\n\r\nconst fileList = document.querySelectorAll('.file');\r\nfileList[1].children[0].classList.add('file__label--active');\r\n\r\nlet initialIndex = 0;\r\nlet initialX = 0;\r\nlet initialY = 0;\r\nlet lastReference;\r\nlet moveElement = false;\r\nlet initialWindowCounterVertical = 0;\r\nlet initialWindowCounterHorizontal = 0;\r\nlet offsetVerticalCounter = 0;\r\nlet offsetHorizontalCounter = 0;\r\n\r\nconst setStartPosition = (elem) => {\r\n  elem.classList.remove('window--collapsed');\r\n  elem.style.left = `${halfDesktopWidth + initialWindowCounterHorizontal}px`;\r\n  elem.style.top = `${halfDesktopHeight + initialWindowCounterVertical}px`;\r\n  elem.style.width = `${windowWidth}px`;\r\n  elem.style.height = `${windowHeight}px`;\r\n  if (initialWindowCounterHorizontal + (desktopWidth - windowWidth) / 2 + 10 + windowWidth >= desktopWidth) {\r\n    initialWindowCounterHorizontal = 0;\r\n    offsetHorizontalCounter = 0;\r\n  } else {\r\n    initialWindowCounterHorizontal += 8;\r\n    offsetHorizontalCounter += 1;\r\n  }\r\n  if (initialWindowCounterVertical + (desktopHeight - windowHeight) / 2 + 30 + windowHeight >= desktopHeight) {\r\n    initialWindowCounterVertical = 0;\r\n    offsetVerticalCounter = 0;\r\n  } else {\r\n    initialWindowCounterVertical += 40;\r\n    offsetVerticalCounter += 1;\r\n  }\r\n};\r\n\r\nconst onFileOpen = (evt) => {\r\n  evt.preventDefault();\r\n  evt.target.classList.remove('file');\r\n  evt.target.classList.add('file--opened');\r\n  const fileLabel = evt.target.querySelector('.file__label');\r\n  const fileName = evt.target.querySelector('.file__name');\r\n  const fileIcon = evt.target.querySelector('.file__icon').cloneNode(true);\r\n  fileIcon.classList.remove('file__icon--desktop');\r\n  const newWindow = windowTemplate.cloneNode(true);\r\n  const newWindowPath = newWindow.querySelector('.window__path');\r\n  const windowHeader = newWindow.querySelector('.window__header');\r\n  const windowDraggableArea = windowHeader.querySelector('.window__draggable-area');\r\n  const reference = referenceTemplate.cloneNode(true);\r\n  newWindowPath.textContent = fileName.textContent;\r\n  windowDraggableArea.insertBefore(fileIcon, newWindowPath);\r\n  desktop.appendChild(newWindow);\r\n  setStartPosition(newWindow);\r\n  fileLabel.classList.add('file__label--active');\r\n  const clonedTargetContent = evt.target.querySelector('.file__content').cloneNode(true);\r\n  newWindow.appendChild(clonedTargetContent);\r\n  clonedTargetContent.classList.remove('visually-hidden');\r\n  clonedTargetContent.classList.add('window__content');\r\n  clonedTargetContent.classList.remove('file__content');\r\n  if (evt.target.classList.contains('file--folder')) {\r\n    clonedTargetContent.classList.add('grid--folder');\r\n  }\r\n\r\n  const setCurrentWindowActive = () => {\r\n    lastReference = reference;\r\n    const newIndex = initialIndex + 1;\r\n    newWindow.style.zIndex = `${newIndex}`;\r\n    initialIndex = newIndex;\r\n    reference.classList.add('reference--active');\r\n    desktop.querySelectorAll('.window--active').forEach((a) => {\r\n      a.classList.remove('window--active');\r\n    });\r\n    newWindow.classList.add('window--active');\r\n    desktop.querySelectorAll('.reference').forEach((b) => {\r\n      if (b === lastReference) {\r\n        b.classList.add('reference--active');\r\n      } else {\r\n        b.classList.remove('reference--active');\r\n      }\r\n    });\r\n  };\r\n\r\n  setCurrentWindowActive();\r\n\r\n  const onMoveEvent = (e) => {\r\n    if (moveElement) {\r\n      e.stopPropagation();\r\n      const newX = !isTouchDevice() ? e.clientX : e.touches[0].clientX;\r\n      const newY = !isTouchDevice() ? e.clientY : e.touches[0].clientY;\r\n      const calcX = initialX - newX;\r\n      const calcY = initialY - newY;\r\n      const leftPosition = `${newWindow.offsetLeft - calcX}px`;\r\n      const topPosition = `${newWindow.offsetTop - calcY}px`;\r\n      newWindow.style.left = leftPosition;\r\n      newWindow.style.top = topPosition;\r\n      initialX = newX;\r\n      initialY = newY;\r\n    }\r\n  };\r\n\r\n  const onMoveThrottled = throttle(onMoveEvent, 10);\r\n\r\n  const onMoveStop = () => {\r\n    document.removeEventListener(events[deviceType].move, onMoveThrottled);\r\n    document.removeEventListener(events[deviceType].up, onMoveStop);\r\n    moveElement = false;\r\n  };\r\n\r\n  const onWindowDrag = (e) => {\r\n    setCurrentWindowActive();\r\n    e.stopPropagation();\r\n    if (e.cancelable) {\r\n      e.preventDefault();\r\n    }\r\n    if (!newWindow.classList.contains('window--fullscreen')) {\r\n      moveElement = true;\r\n      initialX = !isTouchDevice() ? e.clientX : e.touches[0].clientX;\r\n      initialY = !isTouchDevice() ? e.clientY : e.touches[0].clientY;\r\n      document.addEventListener(events[deviceType].move, onMoveThrottled);\r\n      document.addEventListener(events[deviceType].up, onMoveStop);\r\n    }\r\n  };\r\n\r\n  const onCollapseButton = () => {\r\n    if (newWindow.classList.contains('window--collapsed')) {\r\n      newWindow.classList.remove('window--collapsed');\r\n      setCurrentWindowActive();\r\n    } else {\r\n      if (reference === lastReference) {\r\n        newWindow.classList.add('window--collapsed');\r\n      } else {\r\n        setCurrentWindowActive();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onExpandButton = () => {\r\n    setCurrentWindowActive(reference, newWindow);\r\n    if (newWindow.classList.contains('window--fullscreen')) {\r\n      newWindow.classList.remove('window--fullscreen');\r\n    } else {\r\n      newWindow.classList.add('window--fullscreen');\r\n    }\r\n  };\r\n\r\n  const onCloseButton = () => {\r\n    evt.target.classList.add('file');\r\n    evt.target.classList.remove('file--opened');\r\n    setCurrentWindowActive();\r\n    newWindow.remove();\r\n    reference.remove();\r\n    fileLabel.classList.remove('file__label--active');\r\n    if (offsetVerticalCounter > 0) {\r\n      offsetVerticalCounter -= 1;\r\n      initialWindowCounterVertical -= 30;\r\n    }\r\n    if (offsetHorizontalCounter > 0) {\r\n      offsetHorizontalCounter -= 1;\r\n      initialWindowCounterHorizontal -= 10;\r\n    }\r\n  };\r\n\r\n  const referenceIcon = evt.target.querySelector('.file__icon').cloneNode(true);\r\n  referenceIcon.classList.remove('file__icon--desktop');\r\n  const referenceText = reference.querySelector('.reference__text');\r\n  referenceText.textContent = fileName.textContent;\r\n  reference.insertBefore(referenceIcon, referenceText);\r\n  desktopFooter.appendChild(reference);\r\n  reference.addEventListener(events[deviceType].click, onCollapseButton);\r\n\r\n  newWindow.addEventListener(events[deviceType].down, (e) => {\r\n    if (e.target.closest('.window__draggable-area')) {\r\n      onWindowDrag(e);\r\n    }\r\n    if (e.target.closest('.window__content')) {\r\n      setCurrentWindowActive();\r\n    }\r\n  });\r\n\r\n  newWindow.addEventListener(events[deviceType].click, (e) => {\r\n    if (e.target.closest('.window__button--collapse')) {\r\n      onCollapseButton();\r\n    }\r\n    if (e.target.closest('.window__button--close')) {\r\n      onCloseButton();\r\n    }\r\n    if (e.target.closest('.window__button--expand')) {\r\n      onExpandButton();\r\n    }\r\n  });\r\n};\r\n\r\ndesktopFooter.addEventListener('wheel', (evt) => {\r\n  evt.preventDefault();\r\n  desktopFooter.scrollLeft += evt.deltaY;\r\n});\r\n\r\ndesktop.addEventListener(events[deviceType].click, (evt) => {\r\n  if (evt.target.closest('.file') && !evt.target.closest('.file--link')) {\r\n    onFileOpen(evt);\r\n  }\r\n});\r\n"],"file":"window.js"}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,